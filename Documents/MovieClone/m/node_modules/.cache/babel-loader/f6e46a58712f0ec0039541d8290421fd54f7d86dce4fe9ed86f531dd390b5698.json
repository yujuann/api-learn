{"ast":null,"code":"var _jsxFileName = \"/Users/yuju/Documents/MovieClone/m/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\n// fetchUrl필요하다\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    with: \"100%\",\n    height: \"390\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"c/c/yn93yTXkNUP5tNC5UcWQcsM=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","with","height","playerVars","autoplay","map","movie","poster_path","backdrop_path","name","id"],"sources":["/Users/yuju/Documents/MovieClone/m/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\n// fetchUrl필요하다\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  const [trailerUrl, setTrailerUrl] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    with: \"100%\",\n    height: \"390\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {/* poster */}\n        {/*  several row__container-> poster(S) */}\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n        {/* return the img */}\n      </div>\n      <Youtube videoId={trailerUrl} opts={opts} />\n    </div>\n  );\n}\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC;AACnB,MAAMC,QAAQ,GAAG,qCAAqC;;AAEtD;AACA,SAASC,GAAG,OAAkC;EAAA;EAAA,IAAjC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChDD,SAAS,CAAC,MAAM;IACd,eAAeY,SAAS,GAAG;MACzB,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACR,QAAQ,CAAC;MACzCG,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB;IACAD,SAAS,EAAE;EACb,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EACd,MAAMW,IAAI,GAAG;IACXC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,KAAK;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAKhB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAK,SAAS,EAAC,cAAc;MAAA,UAG1BG,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChB;QAEE,SAAS,EAAG,eAAchB,UAAU,IAAI,kBAAmB,EAAE;QAC7D,GAAG,EAAG,GAAEJ,QAAS,GACfI,UAAU,GAAGgB,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACE,aACxC,EAAE;QACH,GAAG,EAAEF,KAAK,CAACG;MAAK,GALXH,KAAK,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAOhB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEE,eACN,QAAC,OAAO;MAAC,OAAO,EAAEjB,UAAW;MAAC,IAAI,EAAEO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV;AAAC,GAxCQb,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}